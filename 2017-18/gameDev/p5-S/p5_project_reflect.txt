<name>Tahmidul Alam</name>
<date>May 28, 2018</date>
<assignmentname>P5 Project Refection</assignmentname>
:   My partner, Darren, and I thought about creating a 2D 2-player shooter game where each player is on one-half on the screen. We
used WASD and Arrow keys to move, and V and P to shoot, respectively. Since this project involved multistep designing and coding
skills, we split up the work based on what we were comfortable with creating. We needed 2 players with 2 ways the bullet travels
(in other words, two bullets). I worked on creating player 1 and the bullet for player 1. Darren helped me with constructing the
second player. As for bullet 2, our goal is to make bullet 2 go in the opposite direction of bullet 1. To do this, we made each of
the bullets travel relative to the each of the player's positions (their x and y coordinates on the plane). This method seemed
very efficient because no matter where each of the player is, the bullets will always travel in the opposite direction of each
other.
    The hardest part about our project was keeping the players within the canvas and make the bullets disappear when they collide,
and reduce the player "Health" when the bullet hits the player. For the project of staying inside the canvas, I made a restriction
in the player's x and y coordinates. If the player touches the top (y = 0) or the bottom (y = windowHeight), or the middle of the
screen (x = windowWidth / 2) or any of the edges (x = 0 or x = windowWidth, players 1 and 2 respectively). To make the bullets
disappear, I thought about how the bullet would "hit" the player. In other words, if the bullet's x position + radius intersects
the player. I made a "passes" function that checks if the bullet intersects with a player. If it did, the function would return
"true" and the bullet would be "spliced" or deleted from the array (they would still be deleted when the bullet touches the edges of
the canvas to keep the game smooth). With the "passes" function, we were able to create a counter for each player's "health". The
biggest problem with our code is to keep track of the "hit" function or when the bullet hits the player. We worked with the bullet
touching the edges of the canvas. Then, we replaced the edges of the canvas with the player's position. In doing so, we were able
to accurately create the "passes" function. To keep our work neat and clean, we created separate files for each player and bullets
to keep track of the changes we were doing and what functions we wanted to implement for all the objects that would be in our game.
    This is how Darren and I made our game in P5.